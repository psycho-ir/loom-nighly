name: Release Loom Project

# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '0 0 * * *'
on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: Checkout loom repository
      uses: actions/checkout@v2
      with:
       repository: openjdk/loom
       ref: fibers
       path: src
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14-ea
    - name: Check new commits
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         set -x
         cd src
         echo $(curl -H "Authorization: token $TOKEN"  https://api.github.com/repos/psycho-ir/loom-nightly/releases/latest)
         latest_release_tag=$(curl -H "Authorization: token $TOKEN"  https://api.github.com/repos/psycho-ir/loom-nightly/releases/latest | jq -r '.tag_name')
         version=$(git rev-parse --short HEAD)
         echo $latest_release_tag
         echo $version
         if [ "$latest_release_tag" == "$version" ]; then
            echo ::set-env name=CONTINUE::YES
         fi
    - name: Install prerequisites
      run: |
        brew install autoconf
    - name: Build JDK
      if: env.CONTINUE == 'YES'
      run: |
        cd src     
        sh configure
        make images
        zip -r jdk-loom-macos-nightly.zip build/macosx-x86_64-server-release/jdk
    - name: Set version
      if: env.CONTINUE == 'YES'
      run: |
        cd src
        VERSION=$(git rev-parse --short HEAD)
        VERSION="$VERSION-mac"
        echo ::set-env name=VERSION::$VERSION
    - name: Create Release
      id: create_release
      if: env.CONTINUE == 'YES'
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Nightly Release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: env.CONTINUE == 'YES'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/jdk-loom-macos-nightly.zip
        asset_name: jdk-loom-macos-nightly.zip
        asset_content_type: application/zip
    - name: Finish
      run: |
       echo 'Build finished successfully'
        
        
