name: Release Project Loom

# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '0 0 * * *'
on:
  push:
    branches:
      - release-together

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Checkout loom repository
        uses: actions/checkout@v2
        with:
          repository: openjdk/loom
          ref: fibers
          path: src
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14-ea
      - name: install prerequisites
        run:  sudo apt-get install libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev libcups2-dev  libasound2-dev
      - name: Build JDK
        run: |
          cd src
          sh configure
          make images
          
          tar -czvf jdk-loom-linux-nightly.tar.gz build/linux-x86_64-server-release/jdk
      - name: Upload linux build
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: src/jdk-loom-linux-nightly.tar.gz
  build-mac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Checkout loom repository
        uses: actions/checkout@v2
        with:
          repository: openjdk/loom
          ref: fibers
          path: src
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14-ea
      - name: Install prerequisites
        run: |
          brew install autoconf
      - name: Build JDK
        run: |
          cd src
          sh configure
          make images
          tar -czvf jdk-loom-macos-nightly.tar.gz build/macosx-x86_64-server-release/jdk
      - name: Upload macox build
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: src/jdk-loom-macos-nightly.tar.gz
  release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-mac
    steps:
      - name: Download linux build
        uses: actions/download-artifact@v1
        with:
          name: artifacts

      - name: Checkout loom repository
        uses: actions/checkout@v2
        with:
          repository: openjdk/loom
          ref: fibers
          path: src
      - name: Check new commits
        run: |
          echo $(ls)
          cd src
          latest_release_tag=$(curl -H "Authorization: token $TOKEN"  https://api.github.com/repos/psycho-ir/loom-nightly/releases/latest | jq -r '.tag_name')
          version=$(git rev-parse --short HEAD)
          echo $latest_release_tag
          echo $version
          if [ "$latest_release_tag" == "$version" ]; then
             echo ::set-env name=CONTINUE::NO
          else
             echo ::set-env name=CONTINUE::YES
          fi
      - name: Checkout loom repository
        if: env.CONTINUE == 'YES'
        uses: actions/checkout@v2
        with:
          repository: openjdk/loom
          ref: fibers
          path: src
      - name: Set version
        if: env.CONTINUE == 'YES'
        run: |
          cd src
          VERSION=$(git rev-parse --short HEAD)
          echo ::set-env name=VERSION::$VERSION
      - name: Create Release
        id: create_release
        if: env.CONTINUE == 'YES'
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Nightly Release
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        if: env.CONTINUE == 'YES'
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/jdk-loom-linux-nightly.tar.gz
          asset_name: jdk-loom-linux-nightly.tar.gz
          asset_content_type: application/gzip
      - name: Upload  Macos Release Asset
        if: env.CONTINUE == 'YES'
        id: upload-mac-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/jdk-loom-macos-nightly.tar.gz
          asset_name: jdk-loom-macos-nightly.tar.gz
          asset_content_type: application/gzip
      - name: Finish
        run: |
          echo 'Build finished successfully'
